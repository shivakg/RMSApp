@model PagedList.IPagedList<Rmsapp.Models.Cmse>
@{
    ViewBag.Title = "Index";
}
<br/> <br />
<h5>CMS DATA</h5>

   <br />     
   @using (Html.BeginForm()) {
  <p>
    <!-- Adding Search String Functionality -->
      Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
     <input name="SearchButton" class="btn btn-success" type="submit" value="Search" /> 
        
        </p>
       }

       <p>
  <!--  @Html.ActionLink("Create New", "Create") -->
    <input type="button" class="btn btn-primary pull-right" value="Create" onclick= "location.href = '@Url.Action("Create","Cmses")'" />
   </p>
<table class="table table-striped table-condensed">
    <tr>
        <th>
        
            @Html.ActionLink("PayDate", "Index", new {sortOrder = ViewBag.PayDateSortParm,currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
          
           @Html.ActionLink("VoucherNo", "Index", new { sortOrder = ViewBag.VoucherNoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
          
            @Html.ActionLink("ChequeNo", "Index", new { sortOrder = ViewBag.ChequeNoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
           
           @Html.ActionLink("CustomerNo", "Index", new { sortOrder = ViewBag.CustomerNoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            
            @Html.ActionLink("CustomerType", "Index", new { sortOrder = ViewBag.CustomerTypeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            
            @Html.ActionLink("AccountNo", "Index", new { sortOrder = ViewBag.AccountNoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            
            @Html.ActionLink("AccountName", "Index", new { sortOrder = ViewBag.AccountNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
           
           @Html.ActionLink("PayMode", "Index", new { sortOrder = ViewBag.PayModeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            
            @Html.ActionLink("PayAmount", "Index", new { sortOrder = ViewBag.PayAmountSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.PayDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VoucherNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChequeNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CustomerType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountNo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PayMode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PayAmount)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { page = 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter=ViewBag.CurrentFilter  })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>
